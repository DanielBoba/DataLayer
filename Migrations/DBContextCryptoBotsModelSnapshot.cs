// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(DBContextCryptoBots))]
    partial class DBContextCryptoBotsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Models.BitfinexFundings", b =>
                {
                    b.Property<Guid>("FundingId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<long>("Id");

                    b.Property<DateTime>("Mts");

                    b.Property<double>("Period");

                    b.Property<double>("Rate");

                    b.Property<Guid?>("ReadingHighRatesId");

                    b.Property<string>("Symbol");

                    b.HasKey("FundingId");

                    b.HasIndex("ReadingHighRatesId");

                    b.ToTable("BitfinexFundings");
                });

            modelBuilder.Entity("DataLayer.Models.BitfinexReadingHighRates", b =>
                {
                    b.Property<Guid>("ReadingHighRatesId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Close");

                    b.Property<DateTime>("Open");

                    b.Property<string>("Symbol");

                    b.HasKey("ReadingHighRatesId");

                    b.ToTable("BitfinexReadingHighRates");
                });

            modelBuilder.Entity("DataLayer.Models.BitfinexTrades", b =>
                {
                    b.Property<Guid>("TradeId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<long>("Id");

                    b.Property<DateTime>("Mts");

                    b.Property<string>("Pair");

                    b.Property<double>("Price");

                    b.Property<Guid?>("ReadingHighRatesId");

                    b.HasKey("TradeId");

                    b.HasIndex("ReadingHighRatesId");

                    b.ToTable("BitfinexTrades");
                });

            modelBuilder.Entity("DataLayer.Models.BitfinexFundings", b =>
                {
                    b.HasOne("DataLayer.Models.BitfinexReadingHighRates", "BitfinexReadingHighRates")
                        .WithMany()
                        .HasForeignKey("ReadingHighRatesId");
                });

            modelBuilder.Entity("DataLayer.Models.BitfinexTrades", b =>
                {
                    b.HasOne("DataLayer.Models.BitfinexReadingHighRates", "BitfinexReadingHighRates")
                        .WithMany()
                        .HasForeignKey("ReadingHighRatesId");
                });
#pragma warning restore 612, 618
        }
    }
}
